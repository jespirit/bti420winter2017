@model Assignment5.Controllers.InvoiceWithInfo

@{
    ViewBag.Title = "Details";
}

<h2>Invoice Details</h2>

<div>
    <h4>Invoice and customer information</h4>
    <ul>
        <li>@Html.ActionLink("Back to List", "Index")</li>
    </ul>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.InvoiceId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.InvoiceId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.InvoiceDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.InvoiceDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Total)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Total)
        </dd>
    </dl>

    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Customer.CustomerId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Customer.CustomerId)
        </dd>

        <dt>
            Customer name
        </dt>

        @{
            var customer = "";
            if (string.IsNullOrEmpty(Model.Customer.Company))
            {
                customer = string.Format("{0} {1}", Model.Customer.FirstName, Model.Customer.LastName);
            }
            else
            {
                customer = string.Format("{0} {1} (from company {2})", Model.Customer.FirstName, Model.Customer.LastName, Model.Customer.Company);
            }

            var address = string.Format("{0} {1}", Model.Customer.City, Model.Customer.State);
        }
        <dd>
            @customer
            <br />
            @address
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Customer.Employee)
        </dt>

        @{
            var employee = string.Format("{0} {1}", Model.Customer.Employee.FirstName, Model.Customer.Employee.LastName);
        }
        <dd>
            @employee
        </dd>

        <dt>
            Billing Address
        </dt>

        <dd>
            @Html.DisplayFor(model => model.BillingAddress)
            <br />
            @Html.DisplayFor(model => model.BillingCity)
            @Html.DisplayFor(model => model.BillingState)
            @Html.DisplayFor(model => model.BillingCountry)
            <br />
            @Html.DisplayFor(model => model.BillingPostalCode)
        </dd>

    </dl>
</div>

<h4>Line Item Detail</h4>
<table class="table">
    <tr>
        <th>
            Invoice Line ID
        </th>
        <th>
            Track ID
        </th>
        <th>
            Track Name, Artist
        </th>
        <th>
            Album, Composer(s)
        </th>
        <th>
            Genre
        </th>
        <th>
            Unit Price
        </th>
        <th>
            Quantity
        </th>
    </tr>

    @foreach (var item in Model.InvoiceLines)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.InvoiceLineId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TrackId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Track.Name)
                <div>by @Html.DisplayFor(modelItem => item.Track.AlbumArtistName)</div>
            </td>
            <td>
                <div>Album: @Html.DisplayFor(modelItem => item.Track.AlbumTitle)</div>
                <div>Composer(s): @Html.DisplayFor(modelItem => item.Track.Composer)</div>
                <div>Format: @Html.DisplayFor(modelItem => item.Track.MediaType.Name)</div>
            </td>
            <td>
                <div>@Html.DisplayFor(modelItem => item.Track.Genre.Name)</div>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
        </tr>
    }

</table>
